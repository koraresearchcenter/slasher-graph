---
---

<div class="pixel-art-header">
    <canvas id="character-canvas"></canvas>
    
    <!-- Title overlaid on characters -->
    <div class="title-overlay">
        <h1 class="glitch pixel-title" data-text="SLASHER STATS">SLASHER STATS</h1>
        <p class="subtitle pixel-text">The Data Behind the Masks</p>
    </div>
    
    <!-- Stats below characters -->
    <div class="stats-grid">
        <div class="stat-item">
            <div class="stat-number">24</div>
            <div class="stat-label">FILMS</div>
        </div>
        <div class="stat-item">
            <div class="stat-number">336</div>
            <div class="stat-label">KILLS</div>
        </div>
        <div class="stat-item">
            <div class="stat-number">$1.6B</div>
            <div class="stat-label">BOX OFFICE</div>
        </div>
    </div>
    
    <div class="scroll-indicator pixel-text">▼ SCROLL TO BEGIN THE CARNAGE ▼</div>
</div>

<style>
.pixel-art-header {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    background: linear-gradient(180deg, #0a0a14 0%, #1a0a0a 50%, #0a0a0a 100%);
    overflow: hidden;
    padding: 40px 20px;
}

#character-canvas {
    position: absolute;
    top: 35%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
    opacity: 1;
    pointer-events: none;
    filter: drop-shadow(0 10px 30px rgba(0, 0, 0, 0.8));
}

.title-overlay {
    position: absolute;
    top: 28%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 5;
    text-align: center;
    pointer-events: none;
    background: radial-gradient(
        ellipse at center,
        rgba(0, 0, 0, 0.85) 0%,
        rgba(0, 0, 0, 0.6) 50%,
        transparent 70%
    );
    padding: 30px 60px;
    border-radius: 20px;
}


.pixel-title {
    font-size: clamp(1.8rem, 5vw, 3.5rem);
    color: #ff6600;
    text-shadow: 
        3px 3px 0px #000,
        6px 6px 0px #8b0000,
        0 0 20px rgba(255, 102, 0, 1),
        0 0 40px rgba(255, 0, 0, 0.5);
    margin-bottom: 15px;
    letter-spacing: 6px;
    animation: glitch 3s infinite;
    position: relative;
    z-index: 2;
    line-height: 1.2;
    font-weight: bold;
    -webkit-text-stroke: 1.5px #000;
    paint-order: stroke fill;
}

.pixel-title::after {
    content: '';
    position: absolute;
    bottom: -20px;
    left: 15%;
    width: 70%;
    height: 30px;
    background: linear-gradient(
        to bottom,
        #ff6600 0%,
        #cc5500 50%,
        transparent 100%
    );
    filter: blur(2px);
    opacity: 0.8;
    clip-path: polygon(
        0% 0%,
        5% 40%,
        8% 0%,
        12% 50%,
        15% 0%,
        20% 60%,
        23% 0%,
        28% 45%,
        32% 0%,
        35% 55%,
        40% 0%,
        43% 50%,
        48% 0%,
        52% 65%,
        55% 0%,
        60% 40%,
        63% 0%,
        68% 55%,
        72% 0%,
        75% 50%,
        80% 0%,
        83% 45%,
        88% 0%,
        92% 60%,
        95% 0%,
        100% 50%,
        100% 100%,
        0% 100%
    );
    animation: blood-drip-slow 4s ease-in-out infinite;
}

@keyframes blood-drip-slow {
    0%, 100% {
        transform: translateY(0) scaleY(1);
        opacity: 0.8;
    }
    50% {
        transform: translateY(5px) scaleY(1.1);
        opacity: 0.9;
    }
}

.subtitle {
    font-size: clamp(0.7rem, 2vw, 1.1rem);
    color: #ccc;
    text-shadow: 
        2px 2px 0px #000,
        0 0 10px rgba(255, 102, 0, 0.5);
    letter-spacing: 2px;
    margin: 0;
    position: relative;
    z-index: 2;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    max-width: 600px;
    margin: 0 auto;
    position: absolute;
    bottom: 120px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 5;
    width: 90%;
}

.stat-item {
    background: rgba(0, 0, 0, 0.9);
    border: 4px solid #ff6600;
    padding: 20px 15px;
    position: relative;
    box-shadow: 
        0 0 20px rgba(255, 102, 0, 0.5),
        inset 0 0 20px rgba(0, 0, 0, 0.8);
    transition: all 0.3s ease;
}

.stat-item:hover {
    transform: translateY(-5px);
    box-shadow: 
        0 0 30px rgba(255, 102, 0, 0.8),
        inset 0 0 20px rgba(0, 0, 0, 0.8);
    border-color: #fff;
}

.stat-item::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: repeating-linear-gradient(
        45deg,
        transparent,
        transparent 10px,
        rgba(255, 102, 0, 0.1) 10px,
        rgba(255, 102, 0, 0.1) 20px
    );
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.stat-item:hover::before {
    opacity: 1;
}

.stat-number {
    font-size: clamp(2rem, 4vw, 3rem);
    color: #ff6600;
    text-shadow: 
        3px 3px 0px #000,
        0 0 20px rgba(255, 102, 0, 0.8);
    font-weight: bold;
    margin-bottom: 8px;
    line-height: 1;
}

.stat-label {
    font-size: clamp(0.5rem, 1vw, 0.7rem);
    color: #ccc;
    letter-spacing: 2px;
    text-shadow: 1px 1px 0px #000;
}

.scroll-indicator {
    position: absolute;
    bottom: 40px;
    left: 50%;
    transform: translateX(-50%);
    font-size: clamp(0.5rem, 1.5vw, 0.7rem);
    color: #ff6600;
    animation: bounce 2s infinite;
    text-shadow: 0 0 10px rgba(255, 102, 0, 0.8);
    z-index: 2;
}

@keyframes bounce {
    0%, 100% { transform: translateX(-50%) translateY(0); }
    50% { transform: translateX(-50%) translateY(-15px); }
}

@keyframes glitch {
    0%, 90%, 100% { transform: translate(0); }
    92% { transform: translate(-3px, 3px); color: #ff6600; }
    94% { transform: translate(3px, -3px); color: #ff0000; }
    96% { transform: translate(-3px, -3px); color: #ff9900; }
}

/* RESPONSIVE */
@media (max-width: 1024px) {
    #character-canvas {
        top: 32%;
    }
    
    .title-overlay {
        top: 25%;
    }
    
    .stats-grid {
        bottom: 100px;
        max-width: 90%;
    }
}

@media (max-width: 768px) {
    #character-canvas {
        top: 30%;
    }
    
    .title-overlay {
        top: 20%;
    }
    
    .pixel-title {
        font-size: clamp(1.2rem, 4vw, 2rem);
    }
    
    .subtitle {
        font-size: clamp(0.5rem, 1.5vw, 0.8rem);
    }
    
    .stats-grid {
        grid-template-columns: 1fr;
        gap: 15px;
        max-width: 300px;
        bottom: 80px;
    }
    
    .stat-item {
        padding: 15px 10px;
    }
}
</style>

<script>
    // Load and display the pixel art characters on canvas
    const canvas = document.getElementById('character-canvas') as HTMLCanvasElement;
    const ctx = canvas.getContext('2d');
    
    if (ctx) {
        const img = new Image();
        img.src = `${import.meta.env.BASE_URL}/myers_jason.png`;
        
        img.onload = () => {
            // Set canvas size based on image dimensions
            const scale = window.innerWidth < 768 ? 0.8 : 1.2;
            
            canvas.width = img.width * scale;
            canvas.height = img.height * scale;
            
            // Draw the image with pixelated rendering
            ctx.imageSmoothingEnabled = false;
            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
        };
        
        // Handle window resize
        let resizeTimeout: number;
        window.addEventListener('resize', () => {
            clearTimeout(resizeTimeout);
            resizeTimeout = setTimeout(() => {
                if (img.complete) {
                    const scale = window.innerWidth < 768 ? 0.8 : 1.2;
                    
                    canvas.width = img.width * scale;
                    canvas.height = img.height * scale;
                    
                    ctx.imageSmoothingEnabled = false;
                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                }
            }, 250);
        });
    }
</script>

